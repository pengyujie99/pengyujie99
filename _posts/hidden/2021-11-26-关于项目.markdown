---
layout:     post
title:      "项目"
subtitle:   "一些简单的项目回顾"
date:       2021-11-26
author:     "Pengyujie"
header-img: "img/tag-bg.jpg"
hidden: true
tags:
  - Java
  - 项目
---

> 周周息项目





#### 周周息项目 导出Excel

首先前端写入点击事件

```jsp
<div class="col-md-2 mb10">
   <button type="button" class="btn btn-info btn-sm" id="exportExcel" >批量下载</button>
</div>

<script type="text/javascript">
$(document).ready(function(){
    //下载列表
		$("#exportExcel").on("click",function(){
			$("#exportExcel").attr("disabled", true);
			exportExcel();
		})
	});
</script>

<script>
	function exportExcel() {

		var download=new Array();
		download.push( {"name": "regionalagentid", "value": $("#regionalagentid").val()});
		download.push( {"name": "agentid", "value": $("#agentid").val()});
		download.push( {"name": "salesmanid", "value": $("#salesmanid").val()});
		download.push( { "name": "merchantname", "value": $.trim($("#merchant_name").val())} );//商户名
		download.push( { "name": "merchantno", "value": $("#merchant_no").val()} );//商户号
		download.push( { "name": "finance_type", "value": $("#finance_type").val()} );//统计类型
		download.push( { "name": "finance_transfer_status", "value": $("#finance_transfer_status").val()} );//自动转入类型
		download.push( { "name": "cardname", "value": $("#card_name").val()} );//结算人
		download.push( { "name": "begintime", "value": $("#begintime").val()} );//统计 开始时间
		download.push( { "name": "endtime", "value": $("#endtime").val()} );//统计 结束时间

		if(confirm("确定要导出吗？")) {
			// boxAlert();
			$.ajax({ //一个Ajax过程
				type: "post", //以post方式与后台沟通
				url : "${ctx}/cms/function/loan/expor_finance_list_sum",
				dataType:'json',//返回值是
				contentType: "application/json",
				data: JSON.stringify(download),
				success: function(data){//如果成功
					if(data.result_code=='01'){
						$("#exportExcel").attr("disabled",false);
						location.href=data.success;
					}else if(data.result_code=='02'){//如果失败
						boxHide();
						$("#exportExcel").attr("disabled",false);
						alert(data.result_msg);
					}
				}
			});
		}else{
			$("#exportExcel").attr("disabled",false);
		}
	}
</script>
```







后端代码

Controller

```java
/**
    * 根据条件导出周周息数据统计列表
    * @param request
    * @param response
    * @param session
    */
   @RequestMapping(value = "expor_finance_list_sum")
   @ResponseBody
   public String expor_finance_list_sum(@RequestBody JSONParam[] params, HttpServletRequest request,
                           HttpServletResponse response, HttpSession session) throws Exception {
      Users user= (Users) session.getAttribute(CommonUtil.SESSION_NAME_LOGIN_RESULT);    //获取当前登录信息
      JSONObject res = new JSONObject();
      if(StringUtil.isEmpty(user) || !Objects.equals(2, user.getRoles().getId())){
         res.put("res_code", "02");
         res.put("res_msg", "登录信息错误!");
         return res.toString();
      }

      List<JSONParam> parmlist = Arrays.asList(params);
      Map<String, String> paramMap = new HashMap<String, String>();
      for (JSONParam jsonParam : parmlist) {
         if (jsonParam == null) {
            continue;
         }
         paramMap.put(jsonParam.getName(), jsonParam.getValue());
      }

      int regionalagentid = -1;
      if (!StringUtil.isEmpty(paramMap.get("regionalagentid"))){
         regionalagentid  = Integer.parseInt(paramMap.get("regionalagentid"));
      }
      int agentid = -1;
      if (!StringUtil.isEmpty(paramMap.get("agentid"))){
         agentid = Integer.parseInt(paramMap.get("agentid"));
      }
      int salesmanid = -1;
      if (!StringUtil.isEmpty(paramMap.get("salesmanid"))){
         salesmanid = Integer.parseInt(paramMap.get("salesmanid"));
      }
      String merchant_name = paramMap.get("merchantname");
      String merchant_no = paramMap.get("merchantno");
      int finance_type = Integer.parseInt(paramMap.get("finance_type"));
      String finance_transfer_status = paramMap.get("finance_transfer_status");
      String card_name = paramMap.get("card_name");
      String begintime = paramMap.get("begintime");
      String endtime = paramMap.get("endtime");


      File file =null;
      JSONObject object = new JSONObject();

      try {
         file=new File("周周息数据统计"+DateUtils.getCurrTime().replace("-","").replace(
               " ", "").replace(":","" )+".xlsx");
         OSSClient client = new OSSClient(CommonUtil.oss_endpoint, CommonUtil.oss_accessKeyId, CommonUtil.oss_secretAccessKey);

         request.setCharacterEncoding("UTF-8");
         response.setContentType("text/html;charset=UTF-8");
         String[] excelHeader = new String[]{"序号","商户名", "商户号","业务经理","代理商","客户经理","商户联系人","结算人","统计时间","统计类别","自动转入","付款账户","转入金额(元)","到账账户","转出金额(元)","上次结息时间","结息金额" ,"结息期数"};
//       String[] excelHeader = new String[]{"序号","商户名称", "商户号","贷款人","授信时间","回调时间","申贷手机号","授信状态","在贷状态","额度(元)","在贷金额(元)" };
         SXSSFWorkbook wb = new SXSSFWorkbook(100);
         //不压缩文件
         wb.setCompressTempFiles(false);
         //创建一个sheet
         SXSSFSheet sheet = wb.createSheet("周周息数据统计列表");
         Row row = sheet.createRow((int) 0);
         CellStyle style = wb.createCellStyle();
         // 添加表格头
         for (int i = 0; i < excelHeader.length; i++) {
            Cell cell = row.createCell(i);
            cell.setCellValue(excelHeader[i]);
            cell.setCellStyle(style);
         }

         List<SQLSearchFilter> filters = new ArrayList<SQLSearchFilter>();
         if(regionalagentid != -1){//业务经理id
            filters.add(new SQLSearchFilter("a.regionid", SQLSearchFilter.Operator_super.EQ,regionalagentid));
         }

         if(agentid != -1){//代理商id
            filters.add(new SQLSearchFilter("a.agentid", SQLSearchFilter.Operator_super.EQ,agentid));
         }

         if(salesmanid != -1){//业务员id
            filters.add(new SQLSearchFilter("a.salesmanid", SQLSearchFilter.Operator_super.EQ,salesmanid));
         }
         //商户号
         if(!StringUtil.isEmpty(merchant_no)){
            filters.add(new SQLSearchFilter("a.merchantno",  SQLSearchFilter.Operator_super.EQ,merchant_no));
         }
         //商户名
         if(!StringUtil.isEmpty(merchant_name)){
            filters.add(new SQLSearchFilter("a.merchantname", SQLSearchFilter.Operator_super.EQ,merchant_name));
         }

         //统计类型
         if (finance_type != -1){
            filters.add(new SQLSearchFilter("b.sub_trade_type", SQLSearchFilter.Operator_super.EQ,finance_type));
         }
         //自动转入设置
         if(!Objects.equals("-1",finance_transfer_status)){
            //开通自动转入
            //理财自动转存状态：0:未开通 1:开通中 2:开通成功 3:开通失败 4:自动转入关闭中 5:已关闭 6:关闭失败
            if(Objects.equals("0",finance_transfer_status)){
               filters.add(new SQLSearchFilter("a.finance_transfer_status", SQLSearchFilter.Operator_super.IN,"(2,4,6)"));
               //未开通自动转入
            }else if(Objects.equals("1",finance_transfer_status)){
               filters.add(new SQLSearchFilter("a.finance_transfer_status", SQLSearchFilter.Operator_super.IN,"(0,1,3,5)"));
            }
         }
         //结算人
         if(!StringUtil.isEmpty(card_name)){
            filters.add(new SQLSearchFilter("a.cardname", SQLSearchFilter.Operator_super.EQ,card_name));
         }

         //统计时间
         if(!StringUtil.isEmpty(begintime)){
            filters.add(new SQLSearchFilter("a.sign_updatetime", SQLSearchFilter.Operator_super.GTE,begintime));
         }
         if(!StringUtil.isEmpty(endtime)){
            filters.add(new SQLSearchFilter("a.sign_updatetime",SQLSearchFilter.Operator_super.LTE,endtime));
         }
         logger.info("获取周周息数据统计列表信息：用户ID:"+user.getId()+"，请求报文:"+JSONObject.toJSONString(params));
         //查询条件查询下载次数

         int count = fmCustcreditService.findTotalCredit(filters);
         if(count >= 150000){//大于150000条
            object.put("result_code", "02");
            object.put("result_msg", "您请求下载的数据过多，建议您缩短时间区间多次下载！");
            return JSONObject.toJSON(object).toString();
         }
         paramMap.remove("getdownloadCount");
         //默认start=0；
         long page=count% 5000==0?count/5000:(count/5000)+1;
         for(int m=0;m<page;m++){
            if(m>0){
               sheet = wb.createSheet("周周息数据统计列表"+(m+1));
               row = sheet.createRow((int) 0);
               style = wb.createCellStyle();
               sheet.trackAllColumnsForAutoSizing();
               // 添加表格头
               for (int i = 0; i < excelHeader.length; i++) {
                  Cell cell = row.createCell(i);
                  cell.setCellValue(excelHeader[i]);
                  cell.setCellStyle(style);

               }
            }
            int start = m*5000;//开始位置
            int length =5000;//长度
            PageRequest    pageRequest = new PageRequest(start,length, new Sort(new Sort.Order(Sort.Direction.DESC, "id")));
            List<FBankFinanceSignSumDetailBean> financeSumList = fmCustcreditService.findFinanceSumList(filters,pageRequest);
            for (int i = 0; i < financeSumList.size(); i++) {
               FBankFinanceSignSumDetailBean fExportBean = financeSumList.get(i);
               row = sheet.createRow(i+1);
               row.createCell(0).setCellValue(""+(i+1+(m*5000)));  //序号
               //row1
               row.createCell(1).setCellValue(fExportBean.getMerchantname());//商户名称
               row.createCell(2).setCellValue(fExportBean.getMerchantno());//商户号
               row.createCell(3).setCellValue(fExportBean.getRegionname());//业务经理
               row.createCell(4).setCellValue(fExportBean.getAgentname());//代理商
               row.createCell(5).setCellValue(fExportBean.getSalesmanname());//客户经理
               row.createCell(6).setCellValue(fExportBean.getMerchantperson());//商户联系人
               row.createCell(7).setCellValue(fExportBean.getCardname());//结算人
               //row2
               row.createCell(8).setCellValue(fExportBean.getCreate_time());//统计时间

               String credit_status = String.valueOf(fExportBean.getSub_trade_type());
               switch (credit_status){
                  case "1":credit_status="转入";
                     break;
                  case "3":credit_status="转出";
                     break;
                  default:credit_status="";
                     break;
               }
               row.createCell(9).setCellValue(credit_status);//统计类别

               String transfer_status = String.valueOf(fExportBean.getFinance_transfer_status());

               if (transfer_status =="2" || transfer_status =="4" || transfer_status =="6"){
                  transfer_status="是";
               }else{
                  transfer_status="否";
               }
               row.createCell(10).setCellValue(transfer_status);//自动转入
               row.createCell(11).setCellValue(fExportBean.getAccount_out());//付款账户
               row.createCell(12).setCellValue(fExportBean.getAmount());//转入金额
               row.createCell(13).setCellValue(fExportBean.getAccount_in());//到款账户
               row.createCell(14).setCellValue(fExportBean.getAmount());//转出金额
               //row3
               row.createCell(15).setCellValue(fExportBean.getStart_date());//上次结息时间
               row.createCell(16).setCellValue(fExportBean.getInt_amt());//结息金额
               row.createCell(17).setCellValue(fExportBean.getSettlement_periods());//结息期数
            }
            sheet.flushRows();
         }
         FileOutputStream fileOutputStream=new FileOutputStream(file);
         wb.write(fileOutputStream);
         ObjectMetadata meta = new ObjectMetadata();
         meta.setContentLength(file.length());
         meta.setCacheControl("no-cache");
         meta.setHeader("Pragma", "no-cache");
         meta.setContentType("application/vnd.ms-excel");
         String key ="financeSum/"+file.getName();
         InputStream input = new FileInputStream(file);
         try {
            client.putObject("lcsw-oss", key, input, meta);
         } catch (Exception e) {
            e.printStackTrace();
         }finally{
            input.close();
         }

         wb.dispose();
         wb.close();
         fileOutputStream.close();
         object.put("result_code", "01");
         object.put("success", "http://oss.lcsw.cn/"+key);
         logger.info("根据条件导出周周息数据统计列表"+object.getString("success"));
         return JSONObject.toJSON(object).toString();

      } catch (Exception ex) {
         logger.error("导出报表异常：", ex);
         throw new Exception("导出报表失败！请稍后再试");
      } finally {
         if (file.exists()) {//下载完毕删除文件
            file.delete();
         }
      }
   }
```



service

```java
/**
 * 周周息数据统计列表下载总数
 * @param filters
 * @return
 */
public int findTotalFinanceSum(List<SQLSearchFilter> filters) {
    return fmCustcreditDao.findTotalFinanceSum(filters);
}

/**
 * 周周息数据统计列表下载
 */
public List<FBankFinanceSignSumDetailBean> findFinanceSumList(List<SQLSearchFilter> filters, PageRequest pageRequest){
    return fmCustcreditDao.findFinanceSumList(filters,pageRequest);
}
```





dao

```java
/**
 * 周周息数据统计列表下载总数
 * @param filters
 * @return
 */
int findTotalFinanceSum(List<SQLSearchFilter> filters);


/**
 * 周周息数据统计列表下载
 */
List<FBankFinanceSignSumDetailBean> findFinanceSumList(List<SQLSearchFilter> filters, PageRequest pageRequest);
```



daoImpl

```java
/**
 * 周周息数据统计列表下载总数
 * SQL:select count(*) from f_merchant_finance_fm a LEFT JOIN b_fumin_account_detail b ON a.merchantid=b.merchant_id AND a.merchantno=b.merchant_no
 * SQL耗时：0.041s
 * 查询库：te5
 * @return
 */
public int findTotalFinanceSum(List<SQLSearchFilter> filters) {

    String hql = "select count(*) from f_merchant_finance_fm a LEFT JOIN b_fumin_account_detail b ON a.merchantid=b.merchant_id AND a.merchantno=b.merchant_no ";
    String parseWhere = SQLDynamicSpecifications.parseWhere(filters);
    hql += parseWhere;
    //总条数
    Query q = em.createNativeQuery(hql);
    SQLDynamicSpecifications.setParameter(q, filters);
    Object result = q.getSingleResult();
    return StringUtil.ObjtoInt(result);
}


/**
 * 周周息数据统计列表下载
 * SQL:SELECT a.id,a.merchantname,a.merchantno,b.region_name,b.agent_name,b.salesman_name,b.merchantperson,a.cardname,b.create_time,b.sub_trade_type,a.finance_transfer_status,b.account_out,b.amount,b.account_in, b.start_date,b.int_amt,b.settlement_periods FROM f_merchant_finance_fm a LEFT JOIN b_fumin_account_detail b ON a.merchantid=b.merchant_id AND a.merchantno=b.merchant_no
 * SQL耗时：0.004s
 * EXPLAIN:
 * 1   SIMPLE a  ALL                7
 * 1   SIMPLE b  ref    merchant_id,merchant_no    merchant_no    131    te5.a.merchantno   12 Using where
 * 查询库：te5
 */
public List<FBankFinanceSignSumDetailBean> findFinanceSumList(List<SQLSearchFilter> filters,PageRequest pageRequest) {
    List<FBankFinanceSignSumDetailBean> listBeen = new ArrayList<>();

    String hql = "SELECT a.id,a.merchantname,a.merchantno,b.region_name,b.agent_name,b.salesman_name,b.merchantperson,a.cardname," +//签约商户表id,商户名,商户号,业务经理名称,代理商名称,区域经理名称,商户联系人,结算人
            "b.create_time,b.sub_trade_type,a.finance_transfer_status,b.account_out,b.amount,b.account_in," +//统计时间,统计类别,自动转入,付款账户,转入金额,到款账户,转出金额
            "b.start_date,b.int_amt,b.settlement_periods " +//上次结息时间,结息金额,结息期数
            "FROM f_merchant_finance_fm a LEFT JOIN b_fumin_account_detail b ON a.merchantid=b.merchant_id AND a.merchantno=b.merchant_no  ";
    String parseWhere = SQLDynamicSpecifications.parseWhere(filters);
    hql += parseWhere + " ORDER BY a.updatetime  DESC limit " + pageRequest.getPageNumber() + ","
            + pageRequest.getPageSize();

    //查询商户列表数据
    Query  q = em.createNativeQuery(hql);
    SQLDynamicSpecifications.setParameter(q, filters);
    List<Integer> rows = q.getResultList();
    for (Object object : rows) {
        Object[] cells = (Object[]) object;
        FBankFinanceSignSumDetailBean fBankFinanceSignSumDetailBean = new FBankFinanceSignSumDetailBean();
        //签约商户表id,商户名,商户号,业务经理名称,代理商名称,区域经理名称,商户联系人,结算人
        fBankFinanceSignSumDetailBean.setMerchantname(cells[1]!=null?cells[1].toString():"");
        fBankFinanceSignSumDetailBean.setMerchantno(cells[2]!=null?cells[2].toString():"");
        fBankFinanceSignSumDetailBean.setRegionname(cells[3]!=null?cells[3].toString():"");
        fBankFinanceSignSumDetailBean.setAgentname(cells[4]!=null?cells[4].toString():"");
        fBankFinanceSignSumDetailBean.setSalesmanname(cells[5]!=null?cells[5].toString():"");
        fBankFinanceSignSumDetailBean.setMerchantperson(cells[6]!=null?cells[6].toString():"");
        fBankFinanceSignSumDetailBean.setCardname(cells[7]!=null?cells[7].toString():"");
        //统计时间,统计类别,自动转入,付款账户,转入金额,到款账户,转出金额
        String create_time = "";
        if (cells[8]!=null){
            create_time = cells[8].toString().substring(0,19);
        }
        fBankFinanceSignSumDetailBean.setCreate_time(create_time);
        fBankFinanceSignSumDetailBean.setSub_trade_type(StringUtil.ObjtoInt(cells[9]));
        fBankFinanceSignSumDetailBean.setFinance_transfer_status(StringUtil.ObjtoInt(cells[10]));
        fBankFinanceSignSumDetailBean.setAccount_out(cells[11]!=null?cells[11].toString():"");
        fBankFinanceSignSumDetailBean.setAmount(cells[12]!=null?cells[12].toString():"");
        fBankFinanceSignSumDetailBean.setAccount_in(cells[13]!=null?cells[13].toString():"");
        //上次结息时间,结息金额,结息期数
        String start_date = (cells[14]!=null?cells[14].toString():"");
        if (!Objects.equals("",start_date)){
            start_date = DateUtils.btoMonthDate(start_date,-1,0,"yyyy-MM-dd");
        }
        fBankFinanceSignSumDetailBean.setStart_date(start_date);
        fBankFinanceSignSumDetailBean.setInt_amt(cells[15]!=null?cells[15].toString():"0");
        fBankFinanceSignSumDetailBean.setSettlement_periods(cells[16]!=null?cells[16].toString():"");

        listBeen.add(fBankFinanceSignSumDetailBean);
    }
    return listBeen;
}
```



#### 定时任务线程池的使用

在工具类中定义线程池类型

CommonUtil类

```java
//此类线程池有缓存,容易造成线程阻塞,以及内存溢出
public static ExecutorService ThreadPool = Executors.newFixedThreadPool(40);//线程池
//此类线程池有缓存,容易造成线程阻塞,以及内存溢出
public static ExecutorService ThreadPoolFumin = Executors.newFixedThreadPool(2);//线程池 用于富民接口保存数据到表
//无限制线程池,适用于任务多耗时短的任务
public static ExecutorService commonThreadPool = Executors.newCachedThreadPool();
//支付宝门店码批量报名线程池
public static ExecutorService AliStoreThreadPool = Executors.newFixedThreadPool(5);
```



Task类

```java
package com.lichu.common.task.t22;


import com.lichu.common.bean.FuminOpenInfoBean;
import com.lichu.common.fbank.runnable.FinanceDetailInfoRunnable;
import com.lichu.common.service.*;
import com.lichu.common.util.CommonUtil;
import com.lichu.common.util.DateUtils;
import com.lichu.common.util.SpringContextUtil;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;

import java.util.List;


@Component
@Lazy(false)
public class FuminStatisticsTask {
    private final static Logger log = Logger.getLogger(FuminStatisticsTask.class);

    @Autowired
    MerchantFinanceFmService merchantFinanceFmService;


    @Scheduled(cron = "0 */2 * * * ?")
    public void fuminapi() {
        log.info("富民接口定时任务启动:" + DateUtils.getCurrTime());
        //这里需要对商户进行一个判断 是否是签约且开户成功的商户 如果是才需要存入数据库中
        List<FuminOpenInfoBean> merchantInfo = merchantFinanceFmService.findMerchantInfo();
        for (FuminOpenInfoBean merchant : merchantInfo) {
            FinanceDetailInfoRunnable financeDetailInfoRunnable = new FinanceDetailInfoRunnable(merchant);
            CommonUtil.ThreadPoolFumin.execute(financeDetailInfoRunnable);
        }
    }
}
```



Runnable类（写入需要用到线程池的业务）

```java
package com.lichu.common.fbank.runnable;

import com.lichu.common.bean.FuminOpenInfoBean;
import com.lichu.common.bean.MerchantBaseInfoBean;
import com.lichu.common.entity.FuminAccountDetail;
import com.lichu.common.bean.FuminHistorySettlementBean;
import com.lichu.common.fbank.util.FBankAccountUtil;
import com.lichu.common.fbank.util.FBankUtil;
import com.lichu.common.service.*;
import com.lichu.common.task.t22.FuminStatisticsTask;
import com.lichu.common.util.DateUtils;
import com.lichu.common.util.SpringContextUtil;
import org.apache.log4j.Logger;
import java.util.List;

public class FinanceDetailInfoRunnable implements Runnable{
    private FuminOpenInfoBean fuminOpenInfoBean;
    private final static Logger log = Logger.getLogger(FuminStatisticsTask.class);

    private static FuminAccountDetailService fuminAccountDetailService = (FuminAccountDetailService) SpringContextUtil.getBean("fuminAccountDetailService");
    private static MerchantService merchantService = (MerchantService) SpringContextUtil.getBean("merchantService");

    public FinanceDetailInfoRunnable(FuminOpenInfoBean fuminOpenInfoBean) {
        this.fuminOpenInfoBean = fuminOpenInfoBean;
    }

    @Override
    public void run() {
        //判断是否 开通
        Integer accountByMno = fuminOpenInfoBean.getAccount_status_fm();
        if (accountByMno==2){//富民二类户开通状态 0:未开通 1:开通中 2:已开通 3:开通失败
            String current_date = DateUtils.getCurrDate();

            List<FuminAccountDetail> fuminAccountDetails = null;
            try {
                fuminAccountDetails = FBankAccountUtil.selectFinanceDetailInfo(fuminOpenInfoBean.getMerchant_no(), "2021-04-29", current_date, 999, 1);
            } catch (Exception e) {
                log.info("富民理财账户财务明细查询接口请求异常",e);
            }

            if (fuminAccountDetails!=null){
                for (FuminAccountDetail fuminAccountDetail : fuminAccountDetails) {
                    if (fuminAccountDetail!=null){
                        if (fuminAccountDetailService.findIdByTradeNo(fuminAccountDetail.getTrade_no())==null){//去重 数据库中没有值时插入
                            try {
                                //查询对应的  代理商id 业务经理id 客户经理id 商户联系人
                                MerchantBaseInfoBean fuminMerchantInfoByNo = merchantService.findFuminMerchantInfoByNo(fuminOpenInfoBean.getMerchant_no());
                                Integer agent_id = fuminMerchantInfoByNo.getAgent_id();//代理商id
                                Integer region_id = fuminMerchantInfoByNo.getRegion_id() ;//业务经理id
                                Integer salesman_id = fuminMerchantInfoByNo.getSalesman_id();//客户经理id
                                String merchantperson =fuminMerchantInfoByNo.getMerchantperson();//商户联系人
                                int merchant_id = fuminMerchantInfoByNo.getMerchantid();//商户id
                                String agent_name= fuminMerchantInfoByNo.getAgent_name();//代理商
                                String region_name = fuminMerchantInfoByNo.getRegion_name();//业务经理
                                String salesman_name = fuminMerchantInfoByNo.getSalesman_name();//客户经理


                                //存入对象
                                fuminAccountDetail.setAgent_id(agent_id);
                                fuminAccountDetail.setRegion_id(region_id);
                                fuminAccountDetail.setSalesman_id(salesman_id);
                                fuminAccountDetail.setAgent_name(agent_name);
                                fuminAccountDetail.setRegion_name(region_name);
                                fuminAccountDetail.setSalesman_name(salesman_name);
                                fuminAccountDetail.setMerchantperson(merchantperson);
                                //操作人 创建时间 更新时间
                                fuminAccountDetail.setCreateoperator("定时任务存入");
                                fuminAccountDetail.setCreateoperator_id(0);
                                fuminAccountDetail.setCreatetime(DateUtils.getCurrTime());
                                fuminAccountDetail.setUpdatetime(DateUtils.getCurrTime());
                                //商户号
                                fuminAccountDetail.setMerchant_no(fuminOpenInfoBean.getMerchant_no());
                                fuminAccountDetail.setMerchant_id(merchant_id);

                                //获取结息信息
                                String base_acct_no = fuminOpenInfoBean.getBase_acct_no();
                                String sign_no = fuminOpenInfoBean.getSign_no();
                                List<FuminHistorySettlementBean> fuminHistorySettlementBeans = FBankAccountUtil.selectHistoryInfo(fuminOpenInfoBean.getMerchant_no(), FBankUtil.getProductNo(), base_acct_no, sign_no, 999, 1);
                                for (FuminHistorySettlementBean fuminHistorySettlementBean : fuminHistorySettlementBeans) {
                                    try {
                                        //当前结息周期 结息金额 当前结息开始日期
                                        fuminAccountDetail.setSettlement_periods(fuminHistorySettlementBean.getSettlement_periods());
                                        fuminAccountDetail.setInt_amt(fuminHistorySettlementBean.getInt_amt());
                                        fuminAccountDetail.setStart_date(fuminHistorySettlementBean.getStart_date());
                                    } catch (Exception e) {
                                        log.info("富民理财账户历史结息保存异常",e);
                                    }
                                }

                                //保存到数据库
                                long beginTime = DateUtils.getNow();
                                fuminAccountDetailService.save(fuminAccountDetail);
                                log.info("富民理财账户财务明细表保存成功,耗时:" + (DateUtils.getNow() - beginTime));
                            } catch (Exception e) {
                                log.info("富民理财账户财务明细保存异常",e);
                            }
                        }
                    }
                }
            }
        }
    }
}
```

